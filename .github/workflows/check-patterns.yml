name: Check Pattern Projects

# This workflow ensures all AI agent pattern projects can be compiled successfully.
# It installs dependencies, type-checks, and builds all pattern projects using Make targets.
# 
# The workflow is designed to be informative rather than blocking - it will continue
# even if there are compilation errors and provide clear next steps for fixing them.

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  check-patterns:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            src/patterns/*/openai-agent-sdk-ts/package-lock.json
            src/site/package-lock.json
      
      - name: Install Make
        run: |
          sudo apt-get update
          sudo apt-get install -y make
      
      - name: Install pattern dependencies
        run: make patterns-install
      
      - name: Type-check patterns
        run: make patterns-check
        continue-on-error: true  # Allow workflow to continue even if there are TypeScript errors
        id: typecheck
      
      - name: Build patterns
        run: make patterns-build
        continue-on-error: true  # Allow workflow to continue even if build fails
        id: build
      
      - name: Report compilation status
        run: |
          echo "## Pattern Compilation Status" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.typecheck.outcome }}" = "failure" ]; then
            echo "❌ **Type-check failed** - TypeScript errors detected" >> $GITHUB_STEP_SUMMARY
            echo "Run \`make patterns-check\` locally to see detailed error messages" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **Type-check passed** - No TypeScript errors" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.build.outcome }}" = "failure" ]; then
            echo "❌ **Build failed** - Compilation errors detected" >> $GITHUB_STEP_SUMMARY
            echo "Run \`make patterns-build\` locally to see detailed error messages" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **Build passed** - All patterns compiled successfully" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "If there are compilation errors:" >> $GITHUB_STEP_SUMMARY
          echo "1. Run \`make patterns-install\` to install dependencies" >> $GITHUB_STEP_SUMMARY
          echo "2. Run \`make patterns-check\` to see TypeScript errors" >> $GITHUB_STEP_SUMMARY
          echo "3. Fix the TypeScript errors in the pattern projects" >> $GITHUB_STEP_SUMMARY
          echo "4. Run \`make patterns-build\` to verify fixes" >> $GITHUB_STEP_SUMMARY
      
      - name: Test patterns
        run: make patterns-test
        continue-on-error: true  # Tests might not be fully configured yet
      
      - name: Check site builds correctly
        run: make site-check
        continue-on-error: true  # Don't fail if site has issues
      
      - name: Final status
        run: |
          echo "Pattern compilation workflow completed!"
          echo "Check the job summary for detailed results and next steps."

  # Optional: Run a quick smoke test to ensure patterns can be executed
  smoke-test:
    runs-on: ubuntu-latest
    needs: check-patterns
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            src/patterns/*/openai-agent-sdk-ts/package-lock.json
      
      - name: Install pattern dependencies
        run: make patterns-install
      
      - name: Smoke test - Check patterns can be imported
        run: |
          echo "Running smoke tests for pattern projects..."
          for pattern_dir in src/patterns/*/; do
            if [ -d "$pattern_dir" ]; then
              for project_dir in $pattern_dir*/; do
                if [ -f "$project_dir/package.json" ]; then
                  echo "Testing $project_dir..."
                  cd "$project_dir"
                  # Try to run TypeScript compilation to check for syntax errors
                  npx tsc --noEmit --skipLibCheck || echo "Warning: TypeScript issues in $project_dir"
                  cd - > /dev/null
                fi
              done
            fi
          done
          echo "Smoke tests completed" 